# -*- coding: utf-8 -*-
"""CaldwellWaterCollection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-BbaGVcXUX25uFa9sJ0vm5ulPGqf6sUH
"""

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import statsmodels.api as sm
import math

from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score, mean_absolute_error

from scipy import stats
from scipy.stats import kurtosis, skew

from google.colab import files
uploaded = files.upload()

#load data
path =r"C:Users\Matthew\Documents\caldwellestimatedata.xlsx"

water_data = pd.read_csv('caldwellestimatedata.csv')

water_data.head()

water_data.dtypes

import sklearn
from sklearn import linear_model
#monthly water collected
x1 = water_data[['Month']]
monthlyWaterCollected = water_data['Amount of Water Collected (gallons)']
x2 = water_data[['Month']]
totalWater = water_data[['Total Amount of Water Saved (gallons)']]
def clean_dataset(df):
    assert isinstance(df, pd.DataFrame), "df needs to be a pd.DataFrame"
    df.dropna(inplace=True)
    indices_to_keep = ~df.isin([np.nan, np.inf, -np.inf]).any(1)
    return df[indices_to_keep].astype(np.float64)

clean_dataset(x1)
clean_dataset(totalWater)

#scatter plot
plt.plot(x1, totalWater, 'o', color = 'blue', label = 'Monthly Water Collected')
plt.title('Water Collection Simulation (2018-2020')
plt.xlabel('Months (starting with January 2018)')
plt.ylabel('Simulated Amount of Water Collected')
plt.legend()
plt.show()


#linear regression model
#x1.reshape(-1,1)
#x_train, y_train, x_test, y_test = sklearn.model_selection.train_test_split(x1, totalWater)

linear = LinearRegression()

linear.fit(x1, totalWater)

#y_predict = linear.predict([[37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60]])
predictionXs = []
predictedYs = []
#emie credit
for x in range(37,72):
  y_predict = linear.predict([[x]])
  predictionXs.append(x)
  predictedYs.append(y_predict[0][0])



#linear.fit(x_train, y_train)
#print(x1)
print(predictedYs)
print(predictionXs)


plt.plot(predictionXs, predictedYs, 'o', color = 'red', label = 'Predicted Monthly Water Collected')
plt.title('Total Water Collection Prediction for Next 3 Years')
plt.xlabel('Months Since Construction Date')
plt.ylabel('Total Amount of Water Collected (prediction)')
plt.legend()
plt.show()




#scatter plot
plt.plot(x1, totalWater, 'o', color = 'blue', label = 'Simulated Monthly Water Collected (2018-2020)')
plt.xlabel('Months (starting with January 2018)')
#plt.ylabel('Simulated Amount of Water Collected')


plt.plot(predictionXs, predictedYs, 'o', color = 'red', label = 'Predicted Monthly Water Collected (2021-2024)')
plt.title('Water Collection Simulation (2018-2020) + Total Water Collection Prediction for Next 3 Years (2021-2024)')
plt.xlabel('Months')
plt.ylabel('Total Amount of Water Collected (prediction)')
plt.legend()
plt.show()



